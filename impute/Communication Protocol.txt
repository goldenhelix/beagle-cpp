COMMUNICATION PROTOCOL BETWEEN THIS IMPUTE LIBRARY AND AN OUTSIDE PROGRAM

This protocol assumes Qt's QDataStream will be used to encode the data
in both directions. This program wraps standard in and standard out in
QFile's, which are used as the I/O devices by the QDataStream, and the
outside program should invoke this library through a QProcess, which
will also be used by QDataStream as the I/O device.

The following outlines the basic overall flow between the outside program and this impute
library. If this library traps an error, it will signal an error and stop.

-> (The outside program's QProcess signals to the outside program's
   code that this library has started.)

<- The outside program sends parameters and how many samples are in
   the reference data and the target data.
-> This library responds with an "OK" signal, along with a computed best
   phase/impute window size and a computed best data packet size.

<- The outside program sends reference sample data (sample names), if
   reference data is being used.
-> This library responds with an "OK" signal.

<- The outside program sends target sample data.
-> This library responds with an "OK" signal.

While there is more marker data:

   If there are both reference and target data:

      While there is more reference data in the current window, window
      boundaries being determined by suggested window size, as well as
      not crossing chromosome boundaries:

         <- The outside program sends a packet of data, preceded by
            how many markers' worth of data is coming.
         -> This library responds with an "OK" signal.

      <- The outside program sends a packet starting with zero.

      <- The outside program sends a boolean (which might instead be
         included in the preceding packet, if that's just as easy) as
         to whether this is the last phase/impute window on this
         particular chromosome. (If it is, then no overlapping or
         splicing for transitioning from this window to a "next"
         window has to be done.)

      While there is more target data ("more" is determined by the
      chromosome/position range of the reference data just sent--the
      target data that lies within this same range is what will now be
      sent):

         <- The outside program sends a packet of data, preceded by
            how many markers' worth of data is coming.
         -> This library responds with an "OK" signal.

      <- The outside program sends a packet starting with zero.

   Else (target only):

      While there is more target data in the current window, window
      boundaries being determined by suggested window size, as well as
      not crossing chromosome boundaries:

         <- The outside program sends a packet of data, preceded by
            how many markers' worth of data is coming.
         -> This library responds with an "OK" signal.

      <- The outside program sends a packet starting with zero.

      <- The outside program sends a boolean as to whether this is the
         last phase/impute window on this particular chromosome.

   While phasing this window:
      -> This library signals progress.

   If the phased results are to be output:

      While there is further phasing data to be output for this window:

         -> This library sends a packet of phasing data.
         <- The outside program responds with an "OK" signal.

      -> This library sends a packet starting with zero.

   If imputation has been requested:

      While performing imputation on this window:
         -> This library signals progress.

      While there is further imputation data to be output for this window:

         -> This library sends a packet of imputation data.
         <- The outside program responds with an "OK" signal.

      -> This library sends a packet starting with zero.

<- The outside program sends a packet starting with zero, to signal
   that all data has come to an end, and that this library can
   terminate.
